sequenceDiagram
    participant browser
    participant server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/spa
    activate server
    server-->>browser: HTML document
    deactivate server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/main.css
    activate server
    server-->>browser: the css file
    deactivate server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/spa.js
    activate server
    server-->>browser: the JavaScript file
    deactivate server

    Note right of browser: The browser starts executing the JavaScript code that fetches the JSON from the server

    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/data.json
    activate server
    server-->>browser: [{ "content": "HTML is easy", "date": "2023-1-1" }, ... ]
    deactivate server

    Note right of browser: The browser executes the callback function that renders the notes

    Note right of browser: User types in "I love JS" in the input box and then press the save button.

    activate server
    browser->>server: POST ("I love JS" payload) https://studies.cs.helsinki.fi/exampleapp/new_note_spa

    Note right of browser: The note list get updated with the new note "I love JS" at the end without having to redirect
    Note right of browser: This process is done by the last block of code in spa.js. There are 3 steps to it:
    Note right of browser: set the input field to empty, update the note list, and send post request


